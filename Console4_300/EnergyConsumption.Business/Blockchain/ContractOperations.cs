using System;
using System.Collections.Generic;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using Nethereum.Contracts;
using Nethereum.Hex.HexTypes;
using Nethereum.RPC.Eth.DTOs;
using Nethereum.Util;
using Nethereum.Web3;
using Nethereum.Web3.Accounts;

namespace EnergyConsumption.Business.Blockchain
{
    public class ContractOperations
    {
        public static string _abi= @"[
	{
		""constant"": false,
		""inputs"": [],
		""name"": ""emptyTariffZoneChkSum"",
		""outputs"": [],
		""payable"": false,
		""stateMutability"": ""nonpayable"",
		""type"": ""function""
	},
	{
		""constant"": false,
		""inputs"": [
			{
				""name"": ""userAddress"",
				""type"": ""address""
			},
			{
				""name"": ""email"",
				""type"": ""bytes32""
			},
			{
				""name"": ""age"",
				""type"": ""uint256""
			}
		],
		""name"": ""insertUser"",
		""outputs"": [
			{
				""name"": ""index"",
				""type"": ""uint256""
			}
		],
		""payable"": false,
		""stateMutability"": ""nonpayable"",
		""type"": ""function""
	},
	{
		""constant"": false,
		""inputs"": [
			{
				""name"": ""_zone_id"",
				""type"": ""uint8""
			},
			{
				""name"": ""_rate_per_1000"",
				""type"": ""uint32""
			}
		],
		""name"": ""loadTariffZone"",
		""outputs"": [],
		""payable"": false,
		""stateMutability"": ""nonpayable"",
		""type"": ""function""
	},
	{
		""constant"": false,
		""inputs"": [],
		""name"": ""incrementCounter"",
		""outputs"": [],
		""payable"": false,
		""stateMutability"": ""nonpayable"",
		""type"": ""function""
	},
	{
		""constant"": false,
		""inputs"": [
			{
				""name"": ""_sensorId"",
				""type"": ""bytes16""
			},
			{
				""name"": ""_sensorDataId"",
				""type"": ""bytes16""
			},
			{
				""name"": ""_counter"",
				""type"": ""uint64""
			}
		],
		""name"": ""insertSensorData"",
		""outputs"": [],
		""payable"": false,
		""stateMutability"": ""nonpayable"",
		""type"": ""function""
	},
	{
		""constant"": true,
		""inputs"": [
			{
				""name"": ""userAddress"",
				""type"": ""address""
			}
		],
		""name"": ""getUser"",
		""outputs"": [
			{
				""name"": ""userEmail"",
				""type"": ""string""
			},
			{
				""name"": ""userAge"",
				""type"": ""uint256""
			},
			{
				""name"": ""index"",
				""type"": ""uint256""
			}
		],
		""payable"": false,
		""stateMutability"": ""view"",
		""type"": ""function""
	},
	{
		""constant"": true,
		""inputs"": [],
		""name"": ""getTariffZones"",
		""outputs"": [
			{
				""name"": """",
				""type"": ""uint32""
			}
		],
		""payable"": false,
		""stateMutability"": ""view"",
		""type"": ""function""
	},
	{
		""constant"": false,
		""inputs"": [
			{
				""name"": ""_sensorId"",
				""type"": ""bytes16""
			}
		],
		""name"": ""insertSensor"",
		""outputs"": [],
		""payable"": false,
		""stateMutability"": ""nonpayable"",
		""type"": ""function""
	},
	{
		""constant"": true,
		""inputs"": [],
		""name"": ""getTariffZoneChkSum"",
		""outputs"": [
			{
				""name"": """",
				""type"": ""int64""
			}
		],
		""payable"": false,
		""stateMutability"": ""view"",
		""type"": ""function""
	},
	{
		""constant"": false,
		""inputs"": [
			{
				""name"": ""x"",
				""type"": ""bytes32""
			}
		],
		""name"": ""bytes32ToString"",
		""outputs"": [
			{
				""name"": """",
				""type"": ""string""
			}
		],
		""payable"": false,
		""stateMutability"": ""nonpayable"",
		""type"": ""function""
	},
	{
		""constant"": true,
		""inputs"": [],
		""name"": ""getCount"",
		""outputs"": [
			{
				""name"": """",
				""type"": ""int256""
			}
		],
		""payable"": false,
		""stateMutability"": ""view"",
		""type"": ""function""
	},
	{
		""constant"": true,
		""inputs"": [
			{
				""name"": ""_sensorId"",
				""type"": ""bytes16""
			}
		],
		""name"": ""getSensorDataHash"",
		""outputs"": [
			{
				""name"": """",
				""type"": ""int64""
			}
		],
		""payable"": false,
		""stateMutability"": ""view"",
		""type"": ""function""
	},
	{
		""constant"": true,
		""inputs"": [
			{
				""name"": ""zone_id"",
				""type"": ""uint8""
			}
		],
		""name"": ""getTariffZoneByZoneId"",
		""outputs"": [
			{
				""name"": """",
				""type"": ""uint32""
			}
		],
		""payable"": false,
		""stateMutability"": ""view"",
		""type"": ""function""
	},
	{
		""constant"": true,
		""inputs"": [
			{
				""name"": ""_sensorId"",
				""type"": ""bytes16""
			},
			{
				""name"": ""_sensorDataId"",
				""type"": ""bytes16""
			}
		],
		""name"": ""getSensorData"",
		""outputs"": [
			{
				""name"": """",
				""type"": ""bytes16""
			},
			{
				""name"": """",
				""type"": ""uint64""
			},
			{
				""name"": """",
				""type"": ""uint256""
			}
		],
		""payable"": false,
		""stateMutability"": ""view"",
		""type"": ""function""
	},
	{
		""constant"": true,
		""inputs"": [
			{
				""name"": ""_sensorId"",
				""type"": ""bytes16""
			}
		],
		""name"": ""getSensor"",
		""outputs"": [
			{
				""name"": ""_sensor_id"",
				""type"": ""bytes16""
			},
			{
				""name"": ""_zone_id"",
				""type"": ""uint8""
			},
			{
				""name"": ""_sensor_data_hash"",
				""type"": ""int64""
			}
		],
		""payable"": false,
		""stateMutability"": ""view"",
		""type"": ""function""
	},
	{
		""constant"": false,
		""inputs"": [
			{
				""name"": ""_sensorId"",
				""type"": ""bytes16""
			},
			{
				""name"": ""hash"",
				""type"": ""int64""
			}
		],
		""name"": ""setSensorDataHash"",
		""outputs"": [],
		""payable"": false,
		""stateMutability"": ""nonpayable"",
		""type"": ""function""
	},
	{
		""constant"": false,
		""inputs"": [
			{
				""name"": ""chksum"",
				""type"": ""int64""
			}
		],
		""name"": ""setTariffZoneChkSum"",
		""outputs"": [],
		""payable"": false,
		""stateMutability"": ""nonpayable"",
		""type"": ""function""
	},
	{
		""constant"": false,
		""inputs"": [],
		""name"": ""decrementCounter"",
		""outputs"": [],
		""payable"": false,
		""stateMutability"": ""nonpayable"",
		""type"": ""function""
	},
	{
		""inputs"": [],
		""payable"": false,
		""stateMutability"": ""nonpayable"",
		""type"": ""constructor""
	}
]";
        public async Task<TransactionReceipt> insertSensor(Guid sensorId)
        {
            var f = _contract.GetFunction("insertSensor");

            return await f.SendTransactionAndWaitForReceiptAsync(_account.Address, new Nethereum.Hex.HexTypes.HexBigInteger(2000000), new HexBigInteger(0), default, sensorId);
        }
        public async Task<dynamic> getSensor(Guid sensorId)
        {
            var f = _contract.GetFunction("getSensor");

            return await f.CallAsync<dynamic>(sensorId);
        }
        public async Task<long> getTariffZonesChkSum()
        {
            return await _contract.GetFunction("getTariffZoneChkSum").CallAsync<long>();
        }
        public async Task<TransactionReceipt> setTariffZoneChkSum(long chksum)
        {
            var f = _contract.GetFunction("setTariffZoneChkSum");

            return await f.SendTransactionAndWaitForReceiptAsync(_account.Address, new Nethereum.Hex.HexTypes.HexBigInteger(2000000), new HexBigInteger(0), default, chksum);
        }
        public async Task<TransactionReceipt> emptyTariffZones()
        {
            var f = _contract.GetFunction("emptyTariffZoneChkSum");

            return await f.SendTransactionAndWaitForReceiptAsync(_account.Address, new Nethereum.Hex.HexTypes.HexBigInteger(2000000), new HexBigInteger(0), default);
        }
        private readonly string _url;
        private readonly string _privateKey;
        private readonly string _contractAddress;
        private readonly Web3 _web3;
        private readonly Account _account;
        private readonly Contract _contract;

        public static string _contractByteCode = "60806040526000600360006101000a81548160ff021916908315150217905550600060085534801561003057600080fd5b506000600360006101000a81548160ff0219169083151502179055506000600360016101000a81548163ffffffff021916908363ffffffff16021790555060008060006101000a81548167ffffffffffffffff021916908360070b67ffffffffffffffff160217905550611bd0806100a96000396000f3fe6080604052600436106100f6576000357c01000000000000000000000000000000000000000000000000000000009004806328419250146100fb57806329434e33146101125780632cb527aa1461014f5780635b34b966146101785780636851a5d31461018f5780636f77926b146101b85780637413ce99146101f7578063780eb19d14610222578063845ab3e91461024b5780639201de5514610276578063a87d942c146102b3578063b3fa11ec146102de578063c06c65111461031b578063c6774edd14610358578063c950b22914610397578063d6ef5d99146103d6578063e76fcc11146103ff578063f5c5ad8314610428575b600080fd5b34801561010757600080fd5b5061011061043f565b005b34801561011e57600080fd5b506101396004803603610134919081019061164a565b6104b2565b60405161014691906119e3565b60405180910390f35b34801561015b57600080fd5b5061017660048036036101719190810190611804565b61061a565b005b34801561018457600080fd5b5061018d610795565b005b34801561019b57600080fd5b506101b660048036036101b191908101906116fe565b6107a8565b005b3480156101c457600080fd5b506101df60048036036101da9190810190611621565b610926565b6040516101ee939291906119a5565b60405180910390f35b34801561020357600080fd5b5061020c610a9c565b60405161021991906119fe565b60405180910390f35b34801561022e57600080fd5b5061024960048036036102449190810190611699565b610ab6565b005b34801561025757600080fd5b50610260610cf8565b60405161026d9190611968565b60405180910390f35b34801561028257600080fd5b5061029d60048036036102989190810190611789565b610d0e565b6040516102aa9190611983565b60405180910390f35b3480156102bf57600080fd5b506102c8610f14565b6040516102d5919061194d565b60405180910390f35b3480156102ea57600080fd5b5061030560048036036103009190810190611699565b610f1e565b6040516103129190611968565b60405180910390f35b34801561032757600080fd5b50610342600480360361033d91908101906117db565b610fca565b60405161034f91906119fe565b60405180910390f35b34801561036457600080fd5b5061037f600480360361037a91908101906116c2565b611000565b60405161038e939291906118df565b60405180910390f35b3480156103a357600080fd5b506103be60048036036103b99190810190611699565b6111a8565b6040516103cd93929190611916565b60405180910390f35b3480156103e257600080fd5b506103fd60048036036103f8919081019061174d565b6112a4565b005b34801561040b57600080fd5b50610426600480360361042191908101906117b2565b61135e565b005b34801561043457600080fd5b5061043d61138c565b005b60008060006101000a81548167ffffffffffffffff021916908360070b67ffffffffffffffff1602179055506000600360016101000a81548163ffffffff021916908363ffffffff160217905550600360016101000a81549063ffffffff0219169055600260006104b0919061139f565b565b60006104bd83610d0e565b600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000190805190602001906105129291906113c7565b5081600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010181905550600160078590806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555003600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018190555060016007805490500390509392505050565b600160008360ff1660ff16815260200190815260200160002060000160059054906101000a900460ff1615156106e557600282908060018154018082558091505090600182039060005260206000209060209182820401919006909192909190916101000a81548160ff021916908360ff160217905550506001600360018282829054906101000a900463ffffffff160192506101000a81548163ffffffff021916908363ffffffff1602179055506001600360006101000a81548160ff0219169083151502179055505b6060604051908101604052808360ff1681526020018263ffffffff16815260200160011515815250600160008460ff1660ff16815260200190815260200160002060008201518160000160006101000a81548160ff021916908360ff16021790555060208201518160000160016101000a81548163ffffffff021916908363ffffffff16021790555060408201518160000160056101000a81548160ff0219169083151502179055509050505050565b6001600860008282540192505081905550565b60046000846fffffffffffffffffffffffffffffffff19166fffffffffffffffffffffffffffffffff1916815260200190815260200160002060000160119054906101000a900460ff161561092157606060405190810160405280836fffffffffffffffffffffffffffffffff191681526020018267ffffffffffffffff1681526020014281525060046000856fffffffffffffffffffffffffffffffff19166fffffffffffffffffffffffffffffffff191681526020019081526020016000206001016000846fffffffffffffffffffffffffffffffff19166fffffffffffffffffffffffffffffffff1916815260200190815260200160002060008201518160000160006101000a8154816fffffffffffffffffffffffffffffffff02191690837001000000000000000000000000000000009004021790555060208201518160000160106101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550604082015181600101559050505b505050565b6060600080600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020154828054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a885780601f10610a5d57610100808354040283529160200191610a88565b820191906000526020600020905b815481529060010190602001808311610a6b57829003601f168201915b505050505092509250925092509193909250565b6000600360019054906101000a900463ffffffff16905090565b60046000826fffffffffffffffffffffffffffffffff19166fffffffffffffffffffffffffffffffff1916815260200190815260200160002060000160119054906101000a900460ff161515610b7257600581908060018154018082558091505090600182039060005260206000209060029182820401919006601002909192909190916101000a8154816fffffffffffffffffffffffffffffffff021916908370010000000000000000000000000000000090040217905550505b60a060405190810160405280826fffffffffffffffffffffffffffffffff19168152602001600160ff168152602001600115158152602001600060070b81526020016000604051908082528060200260200182016040528015610be45781602001602082028038833980820191505090505b5081525060046000836fffffffffffffffffffffffffffffffff19166fffffffffffffffffffffffffffffffff1916815260200190815260200160002060008201518160000160006101000a8154816fffffffffffffffffffffffffffffffff02191690837001000000000000000000000000000000009004021790555060208201518160000160106101000a81548160ff021916908360ff16021790555060408201518160000160116101000a81548160ff02191690831515021790555060608201518160000160126101000a81548167ffffffffffffffff021916908360070b67ffffffffffffffff1602179055506080820151816002019080519060200190610cf1929190611447565b5090505050565b60008060009054906101000a900460070b905090565b60608060206040519080825280601f01601f191660200182016040528015610d455781602001600182028038833980820191505090505b509050600080905060008090505b6020811015610e145760008160080260020a866001900402600102905060007f010000000000000000000000000000000000000000000000000000000000000002817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141515610e0657808484815181101515610dcd57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535082806001019350505b508080600101915050610d53565b506060816040519080825280601f01601f191660200182016040528015610e4a5781602001600182028038833980820191505090505b50905060008090505b828160ff161015610f0857838160ff16815181101515610e6f57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f010000000000000000000000000000000000000000000000000000000000000002828260ff16815181101515610ecb57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050610e53565b50809350505050919050565b6000600854905090565b600060046000836fffffffffffffffffffffffffffffffff19166fffffffffffffffffffffffffffffffff1916815260200190815260200160002060000160119054906101000a900460ff1615610fc05760046000836fffffffffffffffffffffffffffffffff19166fffffffffffffffffffffffffffffffff1916815260200190815260200160002060000160129054906101000a900460070b9050610fc5565b600090505b919050565b6000600160008360ff1660ff16815260200190815260200160002060000160019054906101000a900463ffffffff169050919050565b600080600060046000866fffffffffffffffffffffffffffffffff19166fffffffffffffffffffffffffffffffff191681526020019081526020016000206001016000856fffffffffffffffffffffffffffffffff19166fffffffffffffffffffffffffffffffff1916815260200190815260200160002060000160009054906101000a90047001000000000000000000000000000000000260046000876fffffffffffffffffffffffffffffffff19166fffffffffffffffffffffffffffffffff191681526020019081526020016000206001016000866fffffffffffffffffffffffffffffffff19166fffffffffffffffffffffffffffffffff1916815260200190815260200160002060000160109054906101000a900467ffffffffffffffff1660046000886fffffffffffffffffffffffffffffffff19166fffffffffffffffffffffffffffffffff191681526020019081526020016000206001016000876fffffffffffffffffffffffffffffffff19166fffffffffffffffffffffffffffffffff19168152602001908152602001600020600101549250925092509250925092565b600080600060046000856fffffffffffffffffffffffffffffffff19166fffffffffffffffffffffffffffffffff1916815260200190815260200160002060000160119054906101000a900460ff161561129c578360046000866fffffffffffffffffffffffffffffffff19166fffffffffffffffffffffffffffffffff1916815260200190815260200160002060000160109054906101000a900460ff1660046000876fffffffffffffffffffffffffffffffff19166fffffffffffffffffffffffffffffffff1916815260200190815260200160002060000160129054906101000a900460070b92509250925061129d565b5b9193909250565b60046000836fffffffffffffffffffffffffffffffff19166fffffffffffffffffffffffffffffffff1916815260200190815260200160002060000160119054906101000a900460ff161561135a578060046000846fffffffffffffffffffffffffffffffff19166fffffffffffffffffffffffffffffffff1916815260200190815260200160002060000160126101000a81548167ffffffffffffffff021916908360070b67ffffffffffffffff1602179055505b5050565b806000806101000a81548167ffffffffffffffff021916908360070b67ffffffffffffffff16021790555050565b6001600860008282540392505081905550565b50805460008255601f0160209004906000526020600020908101906113c4919061151d565b50565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061140857805160ff1916838001178555611436565b82800160010185558215611436579182015b8281111561143557825182559160200191906001019061141a565b5b509050611443919061151d565b5090565b8280548282559060005260206000209060010160029004810192821561150c5791602002820160005b838211156114ce57835183826101000a8154816fffffffffffffffffffffffffffffffff0219169083700100000000000000000000000000000000900402179055509260200192601001602081600f01049283019260010302611470565b801561150a5782816101000a8154906fffffffffffffffffffffffffffffffff0219169055601001602081600f010492830192600103026114ce565b505b5090506115199190611542565b5090565b61153f91905b8082111561153b576000816000905550600101611523565b5090565b90565b61157e91905b8082111561157a57600081816101000a8154906fffffffffffffffffffffffffffffffff021916905550600101611548565b5090565b90565b600061158d8235611ac2565b905092915050565b60006115a18235611ad4565b905092915050565b60006115b58235611b00565b905092915050565b60006115c98235611b0a565b905092915050565b60006115dd8235611b17565b905092915050565b60006115f18235611b21565b905092915050565b60006116058235611b31565b905092915050565b60006116198235611b45565b905092915050565b60006020828403121561163357600080fd5b600061164184828501611581565b91505092915050565b60008060006060848603121561165f57600080fd5b600061166d86828701611581565b935050602061167e868287016115a9565b925050604061168f868287016115d1565b9150509250925092565b6000602082840312156116ab57600080fd5b60006116b984828501611595565b91505092915050565b600080604083850312156116d557600080fd5b60006116e385828601611595565b92505060206116f485828601611595565b9150509250929050565b60008060006060848603121561171357600080fd5b600061172186828701611595565b935050602061173286828701611595565b9250506040611743868287016115f9565b9150509250925092565b6000806040838503121561176057600080fd5b600061176e85828601611595565b925050602061177f858286016115bd565b9150509250929050565b60006020828403121561179b57600080fd5b60006117a9848285016115a9565b91505092915050565b6000602082840312156117c457600080fd5b60006117d2848285016115bd565b91505092915050565b6000602082840312156117ed57600080fd5b60006117fb8482850161160d565b91505092915050565b6000806040838503121561181757600080fd5b60006118258582860161160d565b9250506020611836858286016115e5565b9150509250929050565b61184981611a24565b82525050565b61185881611a50565b82525050565b61186781611a5a565b82525050565b600061187882611a19565b80845261188c816020860160208601611b52565b61189581611b85565b602085010191505092915050565b6118ac81611a87565b82525050565b6118bb81611a91565b82525050565b6118ca81611aa1565b82525050565b6118d981611ab5565b82525050565b60006060820190506118f46000830186611840565b61190160208301856118c1565b61190e60408301846118a3565b949350505050565b600060608201905061192b6000830186611840565b61193860208301856118d0565b611945604083018461185e565b949350505050565b6000602082019050611962600083018461184f565b92915050565b600060208201905061197d600083018461185e565b92915050565b6000602082019050818103600083015261199d818461186d565b905092915050565b600060608201905081810360008301526119bf818661186d565b90506119ce60208301856118a3565b6119db60408301846118a3565b949350505050565b60006020820190506119f860008301846118a3565b92915050565b6000602082019050611a1360008301846118b2565b92915050565b600081519050919050565b60007fffffffffffffffffffffffffffffffff0000000000000000000000000000000082169050919050565b6000819050919050565b60008160070b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b600067ffffffffffffffff82169050919050565b600060ff82169050919050565b6000611acd82611a67565b9050919050565b60007fffffffffffffffffffffffffffffffff0000000000000000000000000000000082169050919050565b6000819050919050565b60008160070b9050919050565b6000819050919050565b600063ffffffff82169050919050565b600067ffffffffffffffff82169050919050565b600060ff82169050919050565b60005b83811015611b70578082015181840152602081019050611b55565b83811115611b7f576000848401525b50505050565b6000601f19601f830116905091905056fea265627a7a72305820847bc4b031d3017120354b5d9263febd603ba7420b067d7230d4223e08c6b6486c6578706572696d656e74616cf50037";
        
        public ContractOperations(string url, string privateKey, string contractAddress)
        {
            _url = url;

            _privateKey = privateKey;

            _contractAddress = contractAddress;

            _account = new Nethereum.Web3.Accounts.Account(privateKey);

            _web3 = new Web3(_account, url);

            _contract = _web3.Eth.GetContract(_abi, contractAddress);

        }

        public Contract Contract => _contract;

        public Web3 Web3 => _web3;

        public Account Account => _account;


        public async Task<int> GetTariffZonesCount()
        {
           return await _contract.GetFunction("getTariffZones").CallAsync<int>();
        }
        //loadTariffZone
        public async Task<TransactionReceipt> LoadTariffZone(int zoneId, long ratePer1000)
        {
            var f =  _contract.GetFunction("loadTariffZone");

            //var receipt = web3.Eth.DeployContract.SendRequestAndWaitForReceiptAsync(
            //    ContractOperations._abi,
            //    ContractOperations._contractByteCode,
            //    senderAddress,
            //    new Nethereum.Hex.HexTypes.HexBigInteger(2000000),
            //    //0,
            //    default)

            return await f.SendTransactionAndWaitForReceiptAsync(_account.Address, new Nethereum.Hex.HexTypes.HexBigInteger(2000000),new HexBigInteger(0),default, zoneId, ratePer1000);
        }
    }
}
